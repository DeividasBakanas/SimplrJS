<script type="text/javascript">
	QUnit.config.reorder = false
	$(function() {
		
		var input = {
			put1 : { key : "", identifier : "", data : "test1" },
			put2 : { key : "t2", identifier : "", data : "test2" },
			put3 : { key : "t3", identifier : "i3", data : "test3" },
			put4 : { key : "p1", identifier : "i1", data : "test1", freshness : 500 },
			get1 : { key : "", identifier : "" },
			get2 : { key : "t2", identifier : "" },
			get3 : { key : "t3", identifier : "i3" },
			get4 : { key : "t3", identifier : "bad" },
			get5 : { key : "p1", identifier : "i1" },
			expire1 : "t2",
			expire2 : "t3"
		};
		var output = {
			isNull : null,
			out1 : "test1",
			out2 : "test2",
			out3 : "test3"
		};
		
		module("simplr.cache");
		test("simplr.cache.mSet()", function() {
			equals(simplr.cache.mSet(input.put1), output.out1, "put string");
			equals(simplr.cache.mSet(input.put2), output.out2, "put string");
			equals(simplr.cache.mSet(input.put3), output.out3, "put string");
		});
		
		test("simplr.cache.mGet()", function() {
			equals(simplr.cache.mGet(input.get1), output.isNull, "get no data, not expired");
			equals(simplr.cache.mGet(input.get2), output.out2, "get with data not expired");
			equals(simplr.cache.mGet(input.get3), output.out3, "get with data not expired");
			equals(simplr.cache.mGet(input.get4), output.isNull, "get with a different then what the data is identifer");
		});
		
		test("simplr.cache.mExpire()", function() {
			simplr.cache.mSet(input.put2);
			simplr.cache.mExpire(input.expire1);
			equals(simplr.cache.mGet(input.get2), output.isNull, "data is now expired");
			simplr.cache.mSet(input.put3);
			simplr.cache.mExpire(input.expire2);
			equals(simplr.cache.mGet(input.get3), output.isNull, "data is now expired");
		});
		
		asyncTest("put/get, with expire", function() {
			simplr.cache.mSet(input.put4);
			equals(simplr.cache.mGet(input.get5), output.out1, "get data prior to expire");
			setTimeout(function() {
				equals(simplr.cache.mGet(input.get5), output.isNull, "null after expire");
				start();
			}, 750);
		});
		
	});
</script>